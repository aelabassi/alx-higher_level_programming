==========================
Doctests of 1-my_list.txt
==========================

Usage
======
Class My_list constructor has no argument, and inherit from list

Public instance method:
    print_sorted(obj): sort the list instance in ascending order of only integers
======

Testing for doc string

::
    >>> doc_ = __import__('1-my_list').MyList.__doc__
    >>> len(doc_) > 1
    True
    >>> doc_sub_ = __import__('1-my_list').MyList.print_sorted.__doc__
    >>> len(doc_sub_) > 1
    True

Checking for inheritance

::

    >>> MyList = __import__('1-my_list').MyList
    >>> issubclass(MyList, list)
    True

Empty list
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []


Testing with integers:
=====================
unordered list
::

    >>> MyList = __import__('1-my_list').MyList
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 5]
    >>> my_list.print_sorted()
    [1, 2, 4, 5]
    >>> print(my_list)
    [1, 4, 2, 5]


ordered list

::
    >>> my_list = __import__('1-my_list').MyList
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(4)
    >>> my_list.print_sorted()
    [1, 2, 3, 4]


Negative numbers:
=================
One negative number

::

    >>> my_list = __import__('1-my_list').MyList
    >>> my_list = MyList()
    >>> my_list.append(4)
    >>> my_list.append(-1)
    >>> my_list.append(7)
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [-1, 2, 4, 7]

All negative numbers

::
    >>> my_list = __import__('1-my_list').MyList
    >>> my_list = MyList()
    >>> my_list.append(-9)
    >>> my_list.append(-7)
    >>> my_list.append(-5)
    >>> my_list.append(0)
    >>> my_list.append(9)
    >>> my_list.print_sorted()
    [-9, -7, -5, 0, 9]

Checking for too many arguments:

::

	>>> my_list.print_sorted(1)
	Traceback (most recent call last):
	...
	TypeError: print_sorted() takes 1 positional argument but 2 were given

